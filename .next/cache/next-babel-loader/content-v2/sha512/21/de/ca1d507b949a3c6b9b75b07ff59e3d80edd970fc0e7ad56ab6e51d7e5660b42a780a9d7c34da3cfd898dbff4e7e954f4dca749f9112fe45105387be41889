{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport fetch from 'cross-fetch';\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction sleep() {\n  var delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return new Promise(function (resolve) {\n    setTimeout(resolve, delay);\n  });\n}\n\nvar AutoCompleteBox = function AutoCompleteBox() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      options = _React$useState4[0],\n      setOptions = _React$useState4[1];\n\n  var loading = open && options.length === 0;\n  React.useEffect(function () {\n    var active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, countries;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('https://country.register.gov.uk/records.json?page-size=5000');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return sleep(1e3);\n\n            case 5:\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              countries = _context.sent;\n\n              if (active) {\n                setOptions(Object.keys(countries).map(function (key) {\n                  return countries[key].item[0];\n                }));\n              }\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n\n    return function () {\n      active = false;\n    };\n  }, [loading]);\n  React.useEffect(function () {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n  return /*#__PURE__*/_jsx(Autocomplete, {\n    id: \"asynchronous-demo\",\n    style: {\n      width: '100%',\n      color: 'white'\n    },\n    open: open,\n    onOpen: function onOpen() {\n      setOpen(true);\n    },\n    onClose: function onClose() {\n      setOpen(false);\n    },\n    getOptionSelected: function getOptionSelected(option, value) {\n      return option.name === value.name;\n    },\n    getOptionLabel: function getOptionLabel(option) {\n      return option.name;\n    },\n    options: options,\n    loading: loading,\n    renderInput: function renderInput(params) {\n      return /*#__PURE__*/_jsx(TextField, _objectSpread(_objectSpread({}, params), {}, {\n        label: \"Search saloons\",\n        variant: \"filled\",\n        InputProps: _objectSpread(_objectSpread({}, params.InputProps), {}, {\n          endAdornment: /*#__PURE__*/_jsxs(React.Fragment, {\n            children: [loading ? /*#__PURE__*/_jsx(CircularProgress, {\n              color: \"inherit\",\n              size: 20\n            }) : null, params.InputProps.endAdornment]\n          })\n        })\n      }));\n    }\n  });\n};\n\nexport default AutoCompleteBox;","map":null,"metadata":{},"sourceType":"module"}